---
AWSTemplateFormatVersion: '2010-09-09'

Description: CFN template for spinning up Amazon SageMaker Notebook instance for Immersion Day training.

Metadata: 
  AWS::CloudFormation::Interface: 
    ParameterGroups: 
      - 
        Label: 
          default: "Notebook Configuration"
        Parameters: 
          - NotebookName
          - NotebookInstanceType
          - VolumeSize
          - CodeRepository
      - 
        Label: 
          default: "Notebook Lifecycle Configuration"
        Parameters: 
          - NotebookLifecycleName
          - NotebookLifecycleOnStart

Parameters:

  NotebookName:
    Type: String
    Default: SageMaker-Immersion-Day
    Description: Enter the name of the SageMaker notebook instance.

  VolumeSize:
    Type: Number
    Default: 10
    MinValue: 5
    MaxValue: 16384
    ConstraintDescription: Must be an integer between 5 (GB) and 16384 (16 TB).
    Description: Enter the size of the EBS volume in GB.

  CodeRepository:
    Type: String
    Default: https://github.com/tom5610/sagemaker-immersion-day.git
    Description: Code respository to use with notebooks

  NotebookInstanceType:
    Type: String
    Default: ml.t2.large
    Description: Enter the SageMaker notebook instance type. 

  NotebookLifecycleName:
    Type: String
    Default: notebook-instance-lifecycle
    Description: Notebook lifecycle name. 

  NotebookLifecycleOnStart:
    Type: String
    Default: |
      #!/bin/bash

      set -e

      # Install required library
      sudo -u ec2-user -i <<'EOF'
      echo "..."
      EOF

      # OVERVIEW
      # This script stops a SageMaker notebook once it's idle for more than 1 hour (default time)
      # You can change the idle time for stop using the environment variable below.
      # If you want the notebook the stop only if no browsers are open, remove the --ignore-connections flag
      #
      # Note that this script will fail if either condition is not met
      #   1. Ensure the Notebook Instance has internet connectivity to fetch the example config
      #   2. Ensure the Notebook Instance execution role permissions to SageMaker:StopNotebookInstance to stop the notebook 
      #       and SageMaker:DescribeNotebookInstance to describe the notebook.
      #

      # PARAMETERS
      IDLE_TIME=3600

      echo "Fetching the autostop script"
      wget https://raw.githubusercontent.com/aws-samples/amazon-sagemaker-notebook-instance-lifecycle-config-samples/master/scripts/auto-stop-idle/autostop.py

      echo "Starting the SageMaker autostop script in cron"

      (crontab -l 2>/dev/null; echo "5 * * * * /usr/bin/python $PWD/autostop.py --time $IDLE_TIME --ignore-connections") | crontab -
    Description: Notebook lifecycle name. Default is tfc-training-lifecycle

Resources:
  # SageMaker Execution Role
  SageMakerIamRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: Allow
            Principal:
              Service: sagemaker.amazonaws.com
            Action: sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess"
        - "arn:aws:iam::aws:policy/AmazonS3FullAccess"

  # SageMaker lifecycle
  NotebookLifecycle:
    Type: "AWS::SageMaker::NotebookInstanceLifecycleConfig"
    Properties: 
      NotebookInstanceLifecycleConfigName: !Ref NotebookLifecycleName
      OnStart: 
        - Content:
            Fn::Base64: !Ref NotebookLifecycleOnStart

  # SageMaker notebook
  NotebookInstance:
    Type: "AWS::SageMaker::NotebookInstance"
    Properties:
      InstanceType: !Ref NotebookInstanceType
      NotebookInstanceName: !Ref NotebookName
      RoleArn: !GetAtt SageMakerIamRole.Arn
      VolumeSizeInGB: !Ref VolumeSize
      DefaultCodeRepository: !Ref CodeRepository
      LifecycleConfigName: !GetAtt NotebookLifecycle.NotebookInstanceLifecycleConfigName
 