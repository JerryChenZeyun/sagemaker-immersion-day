---
AWSTemplateFormatVersion: '2010-09-09'

Description: IAM Policies, and SageMaker Notebook to work with MLU Computer Vision.

Metadata: 
  AWS::CloudFormation::Interface: 
    ParameterGroups: 
      - 
        Label: 
          default: "Notebook Configuration"
        Parameters: 
          - NotebookName
          - NotebookInstanceType
          - VolumeSize
          - CodeRepository
      - 
        Label: 
          default: "Notebook Lifecycle Configuration"
        Parameters: 
          - NotebookLifecycleName
          - NotebookLifecycleOnStart

Parameters:

  NotebookName:
    Type: String
    Default: tfc-training
    Description: Enter the name of the SageMaker notebook instance. Default is tfc-training.

  VolumeSize:
    Type: Number
    Default: 5
    MinValue: 5
    MaxValue: 16384
    ConstraintDescription: Must be an integer between 5 (GB) and 16384 (16 TB).
    Description: Enter the size of the EBS volume in GB.

  CodeRepository:
    Type: String
    Default: https://github.com/glyfnet/apac-tfc-training.git
    Description: Code respository to use with notebook

  NotebookInstanceType:
    Type: String
    Default: ml.p2.xlarge
    Description: Enter the SageMaker notebook instance type. Default is ml.p2.xlarge

  NotebookLifecycleName:
    Type: String
    Default: tfc-training-lifecycle
    Description: Notebook lifecycle name. Default is tfc-training-lifecycle

  NotebookLifecycleOnStart:
    Type: String
    Default: |
      #!/bin/bash

      set -e

      # Install required library
      sudo -u ec2-user -i <<'EOF'
      # PARAMETERS
      PACKAGE=scikit-image
      ENVIRONMENT=mxnet_p36

      source /home/ec2-user/anaconda3/bin/activate "$ENVIRONMENT"
      nohup pip install --upgrade pip "$PACKAGE" &
      source /home/ec2-user/anaconda3/bin/deactivate

      # PARAMETERS - install scikit-image on python3 environment
      ENVIRONMENT=python3

      source /home/ec2-user/anaconda3/bin/activate "$ENVIRONMENT"
      nohup pip install --upgrade pip "$PACKAGE" &
      source /home/ec2-user/anaconda3/bin/deactivate

      # Download dataset (if removed from tmp folder)
      BASEURL="https://d8mrh1kj01ho9.cloudfront.net/workshop/cv1/data/"
      FILES='example_dataset.pkl training_data.pkl test_data.pkl sample_model_output.csv'

      for file in $FILES; do
          [ ! -f "/tmp/$file" ] && cd /tmp && { curl -O "$BASEURL$file" ; cd -; }
      done

      EOF

      # OVERVIEW
      # This script stops a SageMaker notebook once it's idle for more than 1 hour (default time)
      # You can change the idle time for stop using the environment variable below.
      # If you want the notebook the stop only if no browsers are open, remove the --ignore-connections flag
      #
      # Note that this script will fail if either condition is not met
      #   1. Ensure the Notebook Instance has internet connectivity to fetch the example config
      #   2. Ensure the Notebook Instance execution role permissions to SageMaker:StopNotebookInstance to stop the notebook 
      #       and SageMaker:DescribeNotebookInstance to describe the notebook.
      #

      # PARAMETERS
      IDLE_TIME=3600

      echo "Fetching the autostop script"
      wget https://raw.githubusercontent.com/aws-samples/amazon-sagemaker-notebook-instance-lifecycle-config-samples/master/scripts/auto-stop-idle/autostop.py

      echo "Starting the SageMaker autostop script in cron"

      (crontab -l 2>/dev/null; echo "5 * * * * /usr/bin/python $PWD/autostop.py --time $IDLE_TIME --ignore-connections") | crontab -
    Description: Notebook lifecycle name. Default is tfc-training-lifecycle

Resources:
  # SageMaker Execution Role
  SageMakerIamRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: Allow
            Principal:
              Service: sagemaker.amazonaws.com
            Action: sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess"
        - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
        - "arn:aws:iam::aws:policy/service-role/AmazonPersonalizeFullAccess"
        - "arn:aws:iam::aws:policy/IAMFullAccess"

  # SageMaker lifecycle
  NotebookLifecycle:
    Type: "AWS::SageMaker::NotebookInstanceLifecycleConfig"
    Properties: 
      NotebookInstanceLifecycleConfigName: !Ref NotebookLifecycleName
      OnStart: 
        - Content:
            Fn::Base64: !Ref NotebookLifecycleOnStart

  # SageMaker notebook
  NotebookInstance:
    Type: "AWS::SageMaker::NotebookInstance"
    Properties:
      InstanceType: !Ref NotebookInstanceType
      NotebookInstanceName: !Ref NotebookName
      RoleArn: !GetAtt SageMakerIamRole.Arn
      VolumeSizeInGB: !Ref VolumeSize
      DefaultCodeRepository: !Ref CodeRepository
      LifecycleConfigName: !GetAtt NotebookLifecycle.NotebookInstanceLifecycleConfigName
 